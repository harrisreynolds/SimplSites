<div id="app">
<%= form_with(model: [:admin, post], local: true) do |form| %>
  <% if post.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(post.errors.count, "error") %> prohibited this post from being saved:</h2>

      <ul>
        <% post.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="form-group">
    <%= form.label :title %>
    <%= form.text_field :title, class: 'form-control' %>
  </div>

  <div class="form-check my-1">
    <%= form.check_box :published, id: :post_publish, class: 'form-check-input' %>
    <label class="form-check-label" for="post_publish">
      Publish?
    </label>
  </div>

  <div class="form-group">
    <%= form.label :content %>
    <input id="post_content" value="<%= post.content %>" type="hidden" name="post[content]" >
    <trix-editor class="trix-content" input="post_content" @focus="onFocus" @blur="onFocusOut"></trix-editor>
  </div>

  <div class="form-group">
    <%= form.label :image, 'Featured Image' %>
    <div class="custom-file">
      <%= form.file_field :image, multiple: false, direct_upload: true, class: "custom-file-input", id: "customFile" %>
      <label class="custom-file-label" for="customFile">Choose file</label>
    </div>
  </div>

  <div class="actions">
    <%= form.submit 'Save', class: 'btn btn-primary' %>
  </div>
<% end %>

</div>

<% if Rails.env.development? %>
  <!-- development version, includes helpful console warnings -->
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<% else %>
  <script src="https://unpkg.com/vue"></script>
<% end %>

<script src="https://cdn.jsdelivr.net/npm/superagent"></script>

<script>
    var app = new Vue({
        el: '#app',
        data: {
            post: {
                id: "<%= post.slug.present? ? post.slug : '' %>",
            },
            timerId: null
        },
        methods: {
            onFocus() {
                if(this.post.id) {
                    console.log('starting timer')
                    this.timerId = setInterval(this.saveContent, 5000);
                    console.log('timer id: ' + this.timerId)
                }

            },
            onFocusOut() {
                if(this.timerId) {
                    console.log('stopping timer')
                    clearInterval(this.timerId)
                }

                this.timerId = null
            },
            saveContent() {
                console.log('saveContent')
                var request = {
                    content: $('#post_content').val()
                }

                superagent
                    .put('/admin/posts/' + this.post.id + '.json')
                    .send({post: request}) // sends a JSON post body
                    .set('X-CSRF-Token', Rails.csrfToken())
                    .set('content-type', 'application/json')
                    .set('accept', 'json')
                    .end((err, res) => {

                        if (err) {
                            console.log(res.text)
                        }
                        else {
                            console.log('content saved')
                        }
                    })
            }
        }
    })
</script>

<%= javascript_include_tag 'trix' %>